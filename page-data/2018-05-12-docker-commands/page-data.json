{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018-05-12-docker-commands/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Stephen Knutter"}},"markdownRemark":{"id":"d7556133-32f1-5797-9fad-9f76c183cd00","excerpt":"Play With Docker Install and Run Docker If error from docker daemon (Server) while starting then run \n - On Linux adds to local docker Unix group.\nOnce added…","html":"<p><a href=\"https://play-with-docker.com\">Play With Docker</a></p>\n<p><a href=\"https://docs.docker.com/docker-for-mac/install/\">Install and Run Docker</a></p>\n<blockquote>\n<p>If error from docker daemon (Server) while starting then run\n<code class=\"language-text\">usermod -aG docker &lt;user&gt;</code> - On Linux adds to local docker Unix group.\nOnce added will need to sign out of shell then back in</p>\n</blockquote>\n<p>⚫ Test docker is running</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker version</code></pre></div>\n<blockquote>\n<p>Should see a response from both <code class=\"language-text\">Client:</code> and <code class=\"language-text\">Server:</code></p>\n</blockquote>\n<p>⚫ View docker images</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker image ls</code></pre></div>\n<p>⚫ Run a filter i.e. show only images tagged as latest  </p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker image ls --filter=reference=&quot;*:latest&quot;</code></pre></div>\n<p>⚫ Search for images on Docker Hub</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker search alpine</code></pre></div>\n<p>⚫ Filter for official images</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker search alpine --filter &quot;is-official=true&quot;</code></pre></div>\n<p>⚫ Inspect a docker image</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker image inspect ubuntu:latest</code></pre></div>\n<p>⚫ Remove a docker image</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker image rm alpine:latest</code></pre></div>\n<p>⚫ Delete all docker images</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker image rm $(docker image ls -q) -f</code></pre></div>\n<p>⚫ Pull a docker image</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker image pull ubuntu:latest</code></pre></div>\n<p>⚫ Pull unofficial images</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker image pull &lt;username&gt;/&lt;image&gt;:&lt;tag&gt;</code></pre></div>\n<p>⚫ Pull from a registery other than Docker Hub</p>\n<blockquote>\n<p>i.e. Google Container Registry (GCR - gcr.io)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker image pull gcr.io/USERNAME/image:latest</code></pre></div>\n<p>⚫ Spin up a quick container</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container run -it ubuntu:latest /bin/bash</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container run --name ctrl -it alpine:latest sh</code></pre></div>\n<blockquote>\n<p>The <code class=\"language-text\">-it</code> flag attaches current shell to terminal of the container.\nTo exit this container without terminating it - press <code class=\"language-text\">Ctrl-PQ</code></p>\n</blockquote>\n<p>⚫ View docker containers</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container ls</code></pre></div>\n<p>⚫ Connect to a docker container</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container exec -it CONTAINER &lt;name&gt;|&lt;id&gt; bash</code></pre></div>\n<p>⚫ Stop a docker container</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container stop CONTAINER &lt;name&gt;|&lt;id&gt;</code></pre></div>\n<p>⚫ Remove a docker container</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container rm CONTAINER &lt;name&gt;|&lt;id&gt;</code></pre></div>\n<p>⚫ Remove all docker containers</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container rm $(docker container ls -aq) -f</code></pre></div>\n<p>⚫ Docker container restart policies</p>\n<ul>\n<li>always</li>\n<li>unless-stopped</li>\n<li>on-failed</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container run --name &lt;name&gt; -it --restart always</code></pre></div>\n<blockquote>\n<p>Note:\n—restart always vs. —restart unless-stopped.\nunless-stopped will not restart when the daemon restarts if they\nwere initially stopped. —restart always will.</p>\n</blockquote>\n<p>⚫ Run docker container as a background process</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container run -d --name &lt;name&gt; -p 80:8080\\ &lt;repo-name&gt;|&lt;image&gt;</code></pre></div>\n<blockquote>\n<p>-d stands for daemon mode and\n-p sets ports as host:container. localhost:80 is mapped to 8080 inside the container</p>\n</blockquote>\n<p>⚫ Simple Dockerfile for basic Node.js app</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">FROM alpine\nRUN apk add --update nodejs nodejs-npm\nCOPY . /src\nWORKDIR /src\nRUN npm install\nEXPOSE 8080\nENTRYPOINT [&quot;node&quot;, &quot;./app.js&quot;]</code></pre></div>\n<p>⚫ Build a docker image from a Dockerfile</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker image build -t test:latest</code></pre></div>\n<p>⚫ Run a docker container from a docker image</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container run -d --name web1 --publish 8080:8080 test:latest</code></pre></div>\n<p>⚫ No Space left on device</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ rm -rf  ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2</code></pre></div>","frontmatter":{"title":"A list of helpful docker commands","date":"September 12, 2018","description":"A quick reference of docker commands for running containers and creating images"}}},"pageContext":{"slug":"/2018-05-12-docker-commands/","previous":{"fields":{"slug":"/2017-08-22-bcrypt-with-nodejs/"},"frontmatter":{"title":"Salt and hash passwords with Bcrypt"}},"next":{"fields":{"slug":"/2018-11-23-deeply-nested-array-of-subdocuments-mongodb/"},"frontmatter":{"title":"Deeply nested array of subdocuments in mongodb"}}}}}