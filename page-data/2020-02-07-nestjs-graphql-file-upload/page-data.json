{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-02-07-nestjs-graphql-file-upload/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Stephen Knutter"}},"markdownRemark":{"id":"df298849-efdf-5035-9712-3167c37a2816","excerpt":"Usage of  GraphQL File Upload Spec Setup a NestJS app with the CLI: NestJS Scaffold Configure GraphQL: NestJS GraphQL In the root of the app, outside the…","html":"<p>Usage of <code class=\"language-text\">graphql-upload</code></p>\n<p><a href=\"https://github.com/jaydenseric/graphql-multipart-request-spec\">GraphQL File Upload Spec</a></p>\n<p>Setup a NestJS app with the CLI:</p>\n<p><a href=\"https://docs.nestjs.com/first-steps\">NestJS Scaffold</a></p>\n<p>Configure GraphQL:</p>\n<p><a href=\"https://docs.nestjs.com/graphql/quick-start\">NestJS GraphQL</a></p>\n<p>In the root of the app, outside the <code class=\"language-text\">src</code> directory, create a directory named <code class=\"language-text\">uploads</code> to write the uploaded file</p>\n<p>Create a Resolver for the upload</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Resolver<span class=\"token punctuation\">,</span> Args<span class=\"token punctuation\">,</span> Mutation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/graphql'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GraphQLUpload<span class=\"token punctuation\">,</span> FileUpload <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-upload'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createWriteStream <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Resolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileResolver</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    @<span class=\"token function\">Mutation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Boolean<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span>@<span class=\"token function\">Args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">type</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> GraphQLUpload<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        createReadStream<span class=\"token punctuation\">,</span>\n        filename\n    <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> FileUpload<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> \n            <span class=\"token function\">createReadStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./uploads/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>filename<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'finish'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">NestJS</code> has a wrapper around <a href=\"https://www.apollographql.com/docs/apollo-server/\">Apollo 2</a> server.\n<code class=\"language-text\">graphql-upload</code> along with the <code class=\"language-text\">Upload</code> scalar come with Apollo version 2</p>\n</blockquote>\n<h4>Test this in <a href=\"https://www.postman.com/downloads/\">Postman</a></h4>\n<ol>\n<li>Select <code class=\"language-text\">POST</code> from the dropdown</li>\n<li>Enter url to Graph server i.e. <code class=\"language-text\">http://localhost:5000/graphql</code></li>\n<li>Select <code class=\"language-text\">form-data</code> and the <code class=\"language-text\">Body</code> tab</li>\n<li>Fill out the <code class=\"language-text\">Body</code> tab as follows</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>operations</td>\n<td>{“query”:“mutation UploadFile($file:Upload!) {\\n  uploadFile(file:$file)\\n}”, “variables”: { “file”: null }}</td>\n</tr>\n<tr>\n<td>map</td>\n<td>{ “0”: [“variables.file”] }</td>\n</tr>\n<tr>\n<td>0</td>\n<td>[File ▾] (select your file to upload)</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"5\">\n<li>Once the body is filled out click <code class=\"language-text\">Send</code></li>\n</ol>\n<p>Successful response</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"uploadFile\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>File should now be in the <code class=\"language-text\">/uploads</code> folder in the app root</p>","frontmatter":{"title":"NestJS GraphQL File Upload","date":"February 07, 2020","description":"File uploads with Nestjs and GraphQL. Nestjs provides a wrapper around Apollo 2 Server which comes included with the Upload scalar and the GraphQLUpload type"}}},"pageContext":{"slug":"/2020-02-07-nestjs-graphql-file-upload/","previous":{"fields":{"slug":"/2020-02-01-setup-angular-typescript-alias/"},"frontmatter":{"title":"TypeScript Import Aliases in Angular"}},"next":null}}}