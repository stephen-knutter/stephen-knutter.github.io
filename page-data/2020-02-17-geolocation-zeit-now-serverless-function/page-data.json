{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-02-17-geolocation-zeit-now-serverless-function/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Stephen Knutter"}},"markdownRemark":{"id":"b9108d9f-58c5-5af9-aed6-8918b17e435d","excerpt":"Next.js Docs List of  starter projects: Next.js examples Use the api-routes starter project: Inside  directory, delete  file Inside  directory, delete  folderâ€¦","html":"<p><a href=\"https://nextjs.org/docs/getting-started\">Next.js Docs</a></p>\n<p>List of <code class=\"language-text\">next.js</code> starter projects:</p>\n<p><a href=\"https://github.com/zeit/next.js/tree/canary/examples\">Next.js examples</a></p>\n<p>Use the api-routes starter project:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx create-next-app --example api-routes</code></pre></div>\n<p>Inside <code class=\"language-text\">Pages</code> directory, delete <code class=\"language-text\">person.js</code> file</p>\n<p>Inside <code class=\"language-text\">Pages/api</code> directory, delete <code class=\"language-text\">people</code> folder</p>\n<p>Install IP and GeoIp packages</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add request-ip geoip-lite</code></pre></div>\n<p>Inside <code class=\"language-text\">Pages/api</code> create a folder called <code class=\"language-text\">geo</code> and inside <code class=\"language-text\">geo</code> create a file called <code class=\"language-text\">index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Pages/api/geo/index.js</span>\n\n<span class=\"token keyword\">const</span> requestIp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'request-ip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> geoip <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'geoip-lite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">const</span> clientIp <span class=\"token operator\">=</span> requestIp<span class=\"token punctuation\">.</span><span class=\"token function\">getClientIp</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'::1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">'72.1.69.153'</span> <span class=\"token comment\">// &lt;-- default location `KY`</span>\n    <span class=\"token keyword\">const</span> geo <span class=\"token operator\">=</span> geoip<span class=\"token punctuation\">.</span><span class=\"token function\">lookup</span><span class=\"token punctuation\">(</span>clientIp<span class=\"token punctuation\">)</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> geo <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Inside <code class=\"language-text\">Pages/index.js</code> display the geo information</p>\n<p>Add one additional package</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add swr</code></pre></div>\n<p>Then add the following code</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Pages/index.js</span>\n\n<span class=\"token keyword\">import</span> fetch <span class=\"token keyword\">from</span> <span class=\"token string\">'isomorphic-unfetch'</span>\n<span class=\"token keyword\">import</span> useSWR <span class=\"token keyword\">from</span> <span class=\"token string\">'swr'</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetcher</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> json\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Index</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSWR</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/geo'</span><span class=\"token punctuation\">,</span> fetcher<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Error<span class=\"token operator\">!</span> Failed to find geolocation<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> geo <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>\n            Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>geo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>strong<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>key<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>strong<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>geo<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Index</code></pre></div>\n<p>Run</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn dev</code></pre></div>\n<p>Example output from <code class=\"language-text\">localhost:3000</code> with the default Kentucky based ip -> <code class=\"language-text\">72.1.69.153</code>:</p>\n<p><strong>range:</strong> 12080427521208043007<br>\n<strong>country:</strong> US<br>\n<strong>region:</strong> KY<br>\n<strong>eu:</strong> 0<br>\n<strong>timezone:</strong> America/Kentucky/Louisville<br>\n<strong>city:</strong> Louisville<br>\n<strong>ll:</strong> 38.269-85.4934<br>\n<strong>metro:</strong> 529<br>\n<strong>area:</strong> 500  </p>\n<p>To see this in action, deploy this to the <a href=\"https://zeit.co/solutions/nextjs\">zeit now platform</a></p>\n<p>Once signed up, deploy is as easy as running the following</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx now</code></pre></div>\n<p>This will run <code class=\"language-text\">yarn build</code> and deploy the output from the <code class=\"language-text\">.next</code> folder</p>\n<p>Once the project is deployed a success message will appear in the terminal âœ…</p>\n<p>Go to the zeit dashboard and find the deployment url, it will be in the format of <code class=\"language-text\">https://&lt;project-name&gt;-&lt;uid&gt;.now.sh</code></p>\n<p>go to the deployment url to see actual geolocation</p>\n<p>This is from a request made from my location in south Denver</p>\n<p><strong>range:</strong> 11347292161134730239<br>\n<strong>country:</strong> US<br>\n<strong>region:</strong> CO<br>\n<strong>eu:</strong> 0<br>\n<strong>timezone:</strong> America/Denver<br>\n<strong>city:</strong> Denver<br>\n<strong>ll:</strong> 39.7067-104.9694<br>\n<strong>metro:</strong> 751<br>\n<strong>area:</strong> 10  </p>","frontmatter":{"title":"Geolocation with Nextjs and Zeit Now Serverless Functions","date":"February 17, 2020","description":"Detect a user's geolocation on serverless functions with zeit now and next.js. By gaining the ip address from the node.js request object, this address can be used with the geoip-lite npm package to map an ip address to a specific set of coordinates","geo":"39.7067 -104.9694"}}},"pageContext":{"slug":"/2020-02-17-geolocation-zeit-now-serverless-function/","previous":{"fields":{"slug":"/2020-02-07-nestjs-graphql-file-upload/"},"frontmatter":{"title":"NestJS GraphQL File Upload"}},"next":null}}}